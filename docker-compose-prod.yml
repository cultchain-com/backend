version: '3.8'

services:
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    command:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.cultchain.com`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"


  web:
    build: .
    command: '/bin/bash -c "chmod +x /usr/src/app/docker-entrypoint.sh && /usr/src/app/docker-entrypoint.sh"'
    volumes:
      - .:/usr/src/app/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`cultchain.com`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=cultchain_db

  redis:
    image: "redis:latest"

  celery_worker:
    build: .
    command: celery -A cultchian_backend worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis

  celery_beat:
    build: .
    command: celery -A cultchian_backend beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis

volumes:
  postgres_data:
  traefik-public-certificates:
